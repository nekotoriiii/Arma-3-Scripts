//
// server.cfg
//
// comments are written with "//" in front of them.

// GLOBAL SETTINGS
hostname = "PLACEHOLDER";		// The name of the server that shall be displayed in the public server list
password = "OI CUNT";					// Password for joining, eg connecting to the server
passwordAdmin = "WTF CUNT WHY DO YOU WANT TO LOGIN WHAT THE FUCK MAN";				// Password to become server admin. When you're in Arma MP and connected to the server, type '#login xyz'
serverCommandPassword = "WTF CUNT WHY DO YOU WANT THIS SERVER";               // Password required by alternate syntax of [[serverCommand]] server-side scripting.
admins[] = {"76561198127134766"};

logFile = "logs/server_console.log";			// Tells ArmA-server where the logfile should go and what it should be called

// WELCOME MESSAGE ("message of the day")
// It can be several lines, separated by comma
// Empty messages "" will not be displayed at all but are only for increasing the interval
motd[] = {
	"Remember to join the teamspeak!",
	"IP is: weebs-are-us.xyz"
};
motdInterval = 1;				// Time interval (in seconds) between each message

// JOINING RULES
maxPlayers = 64;				// Maximum amount of players. Civilians and watchers, beholder, bystanders and so on also count as player.
kickDuplicate = 1;				// Each ArmA version has its own ID. If kickDuplicate is set to 1, a player will be kicked when he joins a server where another player with the same ID is playing.
verifySignatures = 2;				// Verifies .pbos against .bisign files. Valid values 0 (disabled), 1 (prefer v2 sigs but accept v1 too) and 2 (only v2 sigs are allowed). 
equalModRequired = 0;				// Outdated. If set to 1, player has to use exactly the same -mod= startup parameter as the server.
allowedFilePatching = 0;                        // Allow or prevent client using -filePatching to join the server. 0, is disallow, 1 is allow HC, 2 is allow all clients (since Arma 3 1.49+)
filePatchingExceptions[] = {"123456789","987654321"}; // Whitelisted Steam IDs allowed to join with -filePatching enabled 

// VOTING
voteMissionPlayers = 1;				// Tells the server how many people must connect so that it displays the mission selection screen.
voteThreshold = 9999;				// 33% or more players need to vote for something, for example an admin or a new map, to become effective
allowedVoteCmds[] = 
{
	{"admin", false, false, 2},
	{"missions", false, false, 2},
	{"mission", false, false, 2},
	{"kick", false, false, 2},
	{"restart", false, false, 2},
	{"reassign", false, false, 2},	
}; // No Voting allowed whatsoever

// INGAME SETTINGS
disableVoN = 1;					// If set to 1, Voice over Net will not be available
vonCodec = 1; 					// If set to 1 then it uses IETF standard OPUS codec, if to 0 then it uses SPEEX codec (since Arma 3 update 1.58+)  
vonCodecQuality = 30;				// since 1.62.95417 supports range 1-20 //since 1.63.x will supports range 1-30 //8kHz is 0-10, 16kHz is 11-20, 32kHz(48kHz) is 21-30 
persistent = 1;					// If 1, missions still run on even after the last player disconnected.
timeStampFormat = "short";			// Set the timestamp format used on each report line in server-side RPT file. Possible values are "none" (default),"short","full".
BattlEye = 0;					// Server to use BattlEye system
allowedLoadFileExtensions[] = {"hpp","sqs","sqf","fsm","cpp","paa","txt","xml","inc","ext","sqm","ods","fxy","lip","csv","kb","bik","bikb","html","htm","biedi"}; //only allow files with those extensions to be loaded via loadFile command (since Arma 3 build 1.19.124216)
allowedPreprocessFileExtensions[] = {"hpp","sqs","sqf","fsm","cpp","paa","txt","xml","inc","ext","sqm","ods","fxy","lip","csv","kb","bik","bikb","html","htm","biedi"}; //only allow files with those extensions to be loaded via preprocessFile/preprocessFileLineNumber commands (since Arma 3 build 1.19.124323)
allowedHTMLLoadExtensions[] = {"htm","html","xml","txt"}; //only allow files with those extensions to be loaded via HTMLLoad command (since Arma 3 build 1.27.126715)
//allowedHTMLLoadURIs[] = {}; // Leave commented to let missions/campaigns/addons decide what URIs are supported. Uncomment to define server-level restrictions for URIs

// TIMEOUTS
disconnectTimeout = 20; // Time to wait before disconnecting a user which temporarly lost connection. Range is 5 to 90 seconds.
maxDesync = 400; // Max desync value until server kick the user
maxPing = 999; // Max ping value until server kick the user
maxPacketLoss = 50; // Max packetloss value until server kick the user
kickClientsOnSlowNetwork[] = { 0, 0, 0, 0 }; //Defines if {<MaxPing>, <MaxPacketLoss>, <MaxDesync>, <DisconnectTimeout>} will be logged (0) or kicked (1)

kickTimeout[] = { {0, 5}, {1, 5}, {2, 5}, {3, 5} }; 
// Format { { kickID, TimeOut } }
// 0 - Manual Kick (vote kick, admin kick)
// 1 - Connectivity Kick (ping, timeout, packetloss, desync)
// 2 - BattlEye Kick
// 3 - Harmless Kick (wrong addons, steam timeout or checks, signatures, content)
// Timeout = >0 seconds, -1 until missionEnd, -2 until serverRestart

votingTimeOut[] = {600, 900}; // Kicks users from server if they spend too much time in mission voting
roleTimeOut[] = {900, 1200}; // Kicks users from server if they spend too much time in role selection 
briefingTimeOut[] = {600, 900}; // Kicks users from server if they spend too much time in briefing (map) screen
debriefingTimeOut[] = {450, 600}; // Kicks users from server if they spend too much time in debriefing screen
lobbyIdleTimeout = 3000; // The amount of time the server will wait before force-starting a mission without a logged-in Admin.

// SIGNATURE VERIFICATION
onUnsignedData = "kick (_this select 0)";	// unsigned data detected
onHackedData = "kick (_this select 0)";		// tampering of the signature detected
onDifferentData = "";				// data with a valid signature, but different version than the one present on server detected

// MISSIONS CYCLE (see below)
randomMissionOrder = false; // Randomly iterate through Missions list
autoSelectMission = false; // Server auto selects next mission in cycle
forcedDifficulty = "custom";
class Missions {
	class AntiStasi {
		template = "AntistasiPlusAltis.Altis";
		difficulty = "custom";
	};
};				// An empty Missions class means there will be no mission rotation

missionWhitelist[] = {}; // An empty whitelist means there is no restriction on what missions' available

disableChannels[] = { {0, false, true}, {1, true, true}, {2, true, true}, {3, true, true}, {4, true, true}, {5, true, true} };
// Ensures only Global Channel is the only typable channel

headlessClients[] = { "127.0.0.1","localhost","192.168.20.50" };
localClient[] = { "127.0.0.1","localhost","192.168.20.50" };

steamProtocolMaxDataSize = 4096;
